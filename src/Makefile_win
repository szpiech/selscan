# Makefile for selscan (Windows / MinGW)

# Compiler
CC = clang++  # Use Clang++ (no need for -static here; handled in G++FLAG)

# Compiler flags
G++FLAG_SELSCAN = -O3 -std=c++17 -static -static-libgcc -static-libstdc++  # For selscan
G++FLAG_NORM = -O3 -static -static-libgcc -static-libstdc++                # For norm

# Include paths
I_PATH_SELSCAN = -I../include -I../include/win32   # selscan includes Win32 specifics
I_PATH_NORM = -I../include                         # norm uses general includes

# Library path
L_PATH = ../lib/win32   # Path to statically built or extracted GSL/pthread/zlib libraries for Windows

# Linker options
LINK_OPTS_SELSCAN = -L$(L_PATH) -lpthread -lz

# Combined linker options for norm (static linking to GSL libraries + general linking)
LINK_OPTS_NORM = $(L_PATH)/libgsl.a $(L_PATH)/libgslcblas.a -L$(L_PATH) -lpthread -lz

# Object files
OBJ_STATS = xpihh.o ehh.o ihs.o ihh12.o pi.o ehh12.o
OBJ_HAPMAP = hapdata.o mapdata.o bitset.o

# Targets
all : selscan norm 

selscan : selscan-main.o $(OBJ_STATS) selscan-data.o $(OBJ_HAPMAP) selscan-cli.o binom.o param_t.o gzstream.o thread_pool.o 
	$(CC) $(G++FLAG_SELSCAN) -o selscan selscan-main.o $(OBJ_STATS) selscan-data.o $(OBJ_HAPMAP) selscan-cli.o binom.o param_t.o gzstream.o thread_pool.o $(LINK_OPTS_SELSCAN)

selscan-main.o : selscan-main.cpp
	$(CC) $(G++FLAG_SELSCAN) -c selscan-main.cpp $(I_PATH_SELSCAN)

%.o: hapmap/%.cpp hapmap/%.h 
	$(CC) $(G++FLAG_SELSCAN) -c $< -o $@ $(I_PATH_SELSCAN)

%.o: stats/%.cpp stats/%.h 
	$(CC) $(G++FLAG_SELSCAN) -c $< -o $@ $(I_PATH_SELSCAN)

thread_pool.o : thread_pool.cpp thread_pool.h
	$(CC) $(G++FLAG_SELSCAN) -c thread_pool.cpp $(I_PATH_SELSCAN)

selscan-data.o : selscan-data.cpp selscan-data.h
	$(CC) $(G++FLAG_SELSCAN) -c selscan-data.cpp $(I_PATH_SELSCAN)

selscan-cli.o : selscan-cli.cpp selscan-cli.h
	$(CC) $(G++FLAG_SELSCAN) -c selscan-cli.cpp $(I_PATH_SELSCAN)

binom.o : binom.cpp binom.h
	$(CC) $(G++FLAG_SELSCAN) -c binom.cpp

gzstream.o : gzstream.cpp gzstream.h
	$(CC) $(G++FLAG_SELSCAN) -c gzstream.cpp $(I_PATH_SELSCAN)

param_t.o : param_t.cpp param_t.h
	$(CC) $(G++FLAG_SELSCAN) -c param_t.cpp

norm : norm.o param_t.o
	$(CC) $(G++FLAG_NORM) -o norm norm.o param_t.o $(LINK_OPTS_NORM)

norm.o : norm.cpp
	$(CC) $(G++FLAG_NORM) -c norm.cpp $(I_PATH_NORM)

# Clean
clean :
	rm -rf *.o selscan norm
